apiVersion: "apps/v1beta1"
kind: StatefulSet
metadata:
  name: neo4j-core
  namespace: ${ptnamespace}
spec:
  serviceName: neo4j
  replicas: 3
  template:
    metadata:
      labels:
        app: neo4j
        component: core
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                  - neo4j
            topologyKey: kubernetes.io/hostname
      containers:
      - name: neo4j
        image: "neo4j:3.3.2-enterprise"
        imagePullPolicy: "IfNotPresent"
        env:
          - name: NEO4J_dbms_mode
            value: CORE
          - name: NUMBER_OF_CORES
            value: "1"
          - name: NEO4J_dbms_security_auth__enabled
            value: "false"
          - name: NEO4J_causal__clustering_discovery__type
            value: DNS
          - name: NEO4J_causal__clustering_initial__discovery__members
            value: "neo4j:5000"
          - name: NEO4J_ACCEPT_LICENSE_AGREEMENT
            value: "yes"
          - name: NEO4J_dbms.logs.query.allocation_logging_enabled
            value: "true"
          - name: NEO4J_dbms.logs.query.enabled
            value: "true"
          - name: NEO4J_dbms.logs.query.page_logging_enabled
            value: "true"
          - name: NEO4J_dbms.logs.query.time_logging_enabled
            value: "true"
        command:
          - "/bin/bash"
          - "-ecx"
          - |
            export NEO4J_dbms_connectors_default__advertised__address=$(hostname -f)
            export NEO4J_causal__clustering_discovery__advertised__address=$(hostname -f):5000
            export NEO4J_causal__clustering_transaction__advertised__address=$(hostname -f):6000
            export NEO4J_causal__clustering_raft__advertised__address=$(hostname -f):7000
            exec /docker-entrypoint.sh "neo4j"
        ports:
        - containerPort: 5000
          name: discovery
        - containerPort: 7000
          name: raft
        - containerPort: 6000
          name: tx
        - containerPort: 7474
          name: browser
        - containerPort: 7687
          name: bolt
        - containerPort: 6362
          name: backup
        securityContext:
          privileged: true
        volumeMounts:
        - name: datadir
          mountPath: "/data"
        - name: logdir
          mountPath: "/var/lib/neo4j/logs"
        - name: config
          mountPath: "conf/neo4j.conf"
          subPath: neo4j.conf
      volumes:
       - name: datadir
         hostPath:
           path: ${NEO4JDIR}/${ptnamespace}
       - name: logdir
         hostPath:
           path: ${NEO4JDIR}/logs/${ptnamespace}
       - name: config
         configMap:
            name: neo4j-config
            items:
            - key: neo4j.conf
              path: neo4j.conf
       #- name: datadir
       #  emptyDir: {}
      nodeSelector:
        ptnodetype: "datanode"
#  volumeClaimTemplates:
#    - metadata:
#        name: datadir
#      spec:
#        accessModes:
#          - ReadWriteOnce
#        storageClassName: "standard"
#        resources:
#          requests:
#            storage: "10Gi"
